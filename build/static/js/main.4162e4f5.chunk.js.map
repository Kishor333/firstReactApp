{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroller.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","email","name","className","src","alt","CardList","bio","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroller","props","children","App","onSearch","event","setState","searchField","target","value","state","info","fetch","then","response","json","users","this","filteredBio","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAeeA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,KACpB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,OAAOF,UAAU,SACrE,gCACI,6BAAKD,IACL,4BAAID,WCaLK,EAnBE,SAAC,GAAW,IAAVC,EAAS,EAATA,IACf,OACI,8BACKA,EAAIC,KAAI,SAACC,EAAMC,GACZ,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAIG,GAAGV,GACXE,KAAMK,EAAIG,GAAGR,KACbD,MAAOM,EAAIG,GAAGT,OAHTM,EAAIG,GAAGV,UCGrBW,EAVG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOU,KAAK,SAASV,UAAU,mCAAmCW,YAAY,iBAC9EC,SAAUH,OCIPI,EARE,SAACC,GACd,OACI,qBAAKd,UAAU,aAAf,SACKc,EAAMC,YC2CHC,G,wDAvCZ,aAAe,IAAD,8BACV,gBAYJC,SAAW,SAACC,GACR,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAZ1C,EAAKC,MAAQ,CACTC,KAAM,GACNJ,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBK,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKV,SAAS,CAACK,KAAKK,S,oBAO5C,WACI,MAA2BC,KAAKP,MAAzBC,EAAP,EAAOA,KAAKJ,EAAZ,EAAYA,YACNW,EAAcP,EAAKQ,QAAO,SAAA5B,GAC5B,OAAOA,EAAIL,KAAKkC,cAAcC,SAASd,EAAYa,kBAEvD,OAAQF,EAAYI,OAMZ,sBAAKnC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcqB,KAAKb,WAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAWb,IAAK2B,SATvB,8BACG,+C,GAzBEK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,K","file":"static/js/main.4162e4f5.chunk.js","sourcesContent":["import React from \"react\";\nimport './robot.css';\n\nconst Card = ({id,email,name}) => {\n    return (\n        <div className=\"bg-light-green dib br4 pa4 ma3 grow bw2 shadow-5 tc\">\n            <img src={`https://robohash.org/${id}?200*200`} alt=\"this\" className=\"card\" />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({bio}) => {\n    return (\n        <div>\n            {bio.map((user, i) => {\n                return (\n                    <Card\n                        key={bio[i].id}\n                        id={bio[i].id}\n                        name={bio[i].name}\n                        email={bio[i].email}\n                    />\n                   );\n                  }\n                )\n              }\n        </div>\n    )\n};\n\nexport default CardList;\n\n","import React from 'react';\n\nconst SearchBox = ({ searchChange}) => {\n    return (\n        <div className='ma2'>\n            <input type='search' className='pa3 ba b--green bg-lightest-blue' placeholder='Search for the'\n            onChange={searchChange}\n            />\n        </div>\n    )\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport './index.css'\nconst Scroller = (props) => {\n    return (\n        <div className=\"scroll-box\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroller;\n","import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox\";\nimport Scroller from \"./Scroller\";\n// import { bio } from './robot';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            info: [],\n            searchField: ''\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {this.setState({info:users})})\n    }\n\n    onSearch = (event) => {\n        this.setState({searchField : event.target.value})\n    }\n\n    render() {\n        const {info,searchField} = this.state;\n        const filteredBio = info.filter(bio => {\n            return bio.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        return !filteredBio.length ?\n            (<div>\n                <h1>Loading</h1>\n            </div>) :\n\n            (\n                <div className='tc'>\n                <h1 className=\"f2\">RoboFriend </h1>\n                <SearchBox searchChange={this.onSearch}/>\n                <Scroller>\n                    <CardList  bio={filteredBio}/>\n                </Scroller>\n            </div>\n            )\n    }\n}\n\n export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import CardList from './CardList';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}